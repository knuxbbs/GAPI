// GtkSharp.Generation.ClassGen.cs - The Class Generatable.
//
// Author: Mike Kestner <mkestner@speakeasy.net>
//
// Copyright (c) 2001-2003 Mike Kestner
//
// This program is free software; you can redistribute it and/or
// modify it under the terms of version 2 of the GNU General Public
// License as published by the Free Software Foundation.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
// General Public License for more details.
//
// You should have received a copy of the GNU General Public
// License along with this program; if not, write to the
// Free Software Foundation, Inc., 59 Temple Place - Suite 330,
// Boston, MA 02111-1307, USA.

using System.Xml;

namespace GapiCodegen.Generatables
{
    /// <summary>
    /// Handles 'class' elements (static classes).
    /// </summary>
    public class ClassGen : ClassBase
    {
        public ClassGen(XmlElement namespaceElement, XmlElement element) : base(namespaceElement, element) { }

        public override string AssignToName => string.Empty;

        public override string MarshalType => string.Empty;

        public override string CallByName()
        {
            return string.Empty;
        }

        public override string CallByName(string var)
        {
            return string.Empty;
        }

        public override string FromNative(string varName)
        {
            return string.Empty;
        }

        public override void Generate(GenerationInfo generationInfo)
        {
            generationInfo.CurrentType = QualifiedName;

            var sw = generationInfo.Writer = generationInfo.OpenStream(Name, Namespace);

            sw.WriteLine($"namespace {Namespace} {{");
            sw.WriteLine();
            sw.WriteLine("\tusing System;");
            sw.WriteLine("\tusing System.Runtime.InteropServices;");
            sw.WriteLine();
            sw.WriteLine("#region Autogenerated code");

            if (IsDeprecated)
                sw.WriteLine("\t[Obsolete]");

            sw.Write("\t{0} partial class {1}", IsInternal ? "internal" : "public", Name);
            sw.WriteLine(" {");
            sw.WriteLine();

            GenerateConstants(generationInfo);
            GenerateProperties(generationInfo, null);
            GenerateMethods(generationInfo, null, null);

            sw.WriteLine("#endregion");
            sw.WriteLine("\t}");
            sw.WriteLine("}");
            sw.Close();

            generationInfo.Writer = null;
        }
    }
}
